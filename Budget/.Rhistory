if_na(0)
tab14
ENDO2016|>
filter(p07==1)|>
select(p904_1:p904_9,p109_c_01,p04, ponderador)|>
#apply_labels(p904_6 = "Atender los problemas académicos o socioafectivos de los estudiantes",
#p904_7 = "Coordinar con los padres de familia")|>
tab_cells(p904_1:p904_9)|>
tab_cols(total(), p109_c_01, p04, p04 %nest%p109_c_01)|>
tab_weight(ponderador)|>
tab_stat_cpct(
total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()|>
if_na(0)
ENDO2016|>
filter(p07==1)|>
select(p904_1, p904_2, p904_3, p904_4, p904_5, p904_6, p904_7, p904_8, p904_9,p109_c_01,p04, ponderador)|>
#apply_labels(p904_6 = "Atender los problemas académicos o socioafectivos de los estudiantes",
#p904_7 = "Coordinar con los padres de familia")|>
tab_cells(p904_1, p904_2, p904_3, p904_4, p904_5, p904_6, p904_7, p904_8, p904_9)|>
tab_cols(total(), p109_c_01, p04, p04 %nest%p109_c_01)|>
tab_weight(ponderador)|>
tab_stat_cpct(
total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()|>
if_na(0)
ENDO2018|>
filter(P07==1)|> #Gestion pública
select(P904_1:P904_20,`P109_C$01`,P04, FACTOREXPANSION )|>
#apply_labels(`P109_C$01`= "Sexo",
#P904_8 = "Atender los problemas académicos o socioafectivos de los estudiantes",
#P904_7 = "Coordinar con los padres de familia")|>
tab_cells(P904_1,P904_2, P904_3, P904_4, P904_5, P904_6, P904_7, P904_8, P904_9, P904_10, P904_11, P904_12, P904_13, P904_14, P904_15, P904_16, P904_17, P904_18, P904_19, P904_20)|>
tab_cols(total(), `P109_C$01`, P04, P04 %nest%`P109_C$01`)|>
tab_weight(FACTOREXPANSION)|>
tab_stat_cpct(total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()|>
if_na(0)
ENDO2020|>
filter(P4==1, P5==1 )|>
select(P1_27_A:P1_27_E, P1_1,cod_area, FACTOR_EXPANSION)|>
md.pattern()
ENDO2020|>
filter(P4==1, P5==1 )|>
#filter(!is.na(P1_27_D))|>
select(P1_27_A:P1_27_E, P1_1,cod_area, FACTOR_EXPANSION)|>
mutate(across(c(P1_27_B:P1_27_D), ~sjmisc::replace_na(.,value= 100, na.label =  "Sin información")))|>
#apply_labels(P1_27_D = "Coordinar con los padres de familia",
#P1_27_B= "Atender los problemas socioemocionales de las y los estudiantes")|>
tab_cells(P1_27_A, P1_27_B, P1_27_C, P1_27_D, P1_27_E)|>
tab_cols(total(), P1_1, cod_area, cod_area%nest%P1_1)|>
tab_weight(FACTOR_EXPANSION)|>
tab_stat_cpct(total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()
ENDO2020|>
filter(P4==1, P5==1 )|>
#filter(!is.na(P1_27_D))|>
select(P1_27_A:P1_27_E, P1_1,cod_area, FACTOR_EXPANSION)|>
mutate(across(c(P1_27_B:P1_27_D), ~sjmisc::replace_na(.,value= 100, na.label =  "Sin información")))|>
apply_labels(P1_27_A="Comunicarse, retroalimentar y motivar a los estudiantes",
P1_27_B= "Atender los problemas socioemocionales de las y los estudiantes",
P1_27_C= "Virutalizar la enseñanza, adaptando las sesiones de Aprendo en casa según las necesidades de los estudiantes",
P1_27_D = "Coordinar con los padres de familia",
P1_27_E= "Planificar las actividades bajo el enfoque por competencias del Currículo Nacional de la Educación Básica"
)|>
tab_cells(P1_27_A, P1_27_B, P1_27_C, P1_27_D, P1_27_E)|>
tab_cols(total(), P1_1, cod_area, cod_area%nest%P1_1)|>
tab_weight(FACTOR_EXPANSION)|>
tab_stat_cpct(total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()
ENDO2021|>
filter(C4==1, C5==1,P4_2 != 99 | is.na(P4_2))|>
#filter(!is.na(P5_2_A))|>
select(P5_2_A: P5_2_G, Sexo,AREA_DESC, FACTOR_EXPANSION)|>
md.pattern()
tab24<- #as.datatable_widget(
ENDO2021|>
filter(C4==1, C5==1,P4_2 != 99 | is.na(P4_2))|>
#filter(!is.na(P5_2_A))|>
select(P5_2_A: P5_2_G,Sexo,AREA_DESC, FACTOR_EXPANSION)|>
mutate(across(c(P5_2_A:P5_2_G), ~sjmisc::replace_na(.,value= 100, na.label =  "Sin información")))|>
apply_labels(P5_2_A = "Planificar la enseñanza de forma individual o colegiada",
P5_2_B= "Planificar actividades bajo el enfoque por competencias",
P5_2_C= "Realizar la evaluación diagnóstica y formativa",
P5_2_D="Virtualizar la enseñanza, adaptando las sesiones de Aprendo en casa",
P5_2_E="Atender los problemas socioemocionales de sus estudiantes",
P5_2_F= "Coordinar y responder a la demanda de padres y madres de familia"
P5_2_G= "Proponer e implementar innovaciones o buenas prácticas pedagógicas"
tab24<- #as.datatable_widget(
ENDO2021|>
filter(C4==1, C5==1,P4_2 != 99 | is.na(P4_2))|>
#filter(!is.na(P5_2_A))|>
select(P5_2_A: P5_2_G,Sexo,AREA_DESC, FACTOR_EXPANSION)|>
mutate(across(c(P5_2_A:P5_2_G), ~sjmisc::replace_na(.,value= 100, na.label =  "Sin información")))|>
apply_labels(P5_2_A = "Planificar la enseñanza de forma individual o colegiada",
P5_2_B= "Planificar actividades bajo el enfoque por competencias",
P5_2_C= "Realizar la evaluación diagnóstica y formativa",
P5_2_D="Virtualizar la enseñanza, adaptando las sesiones de Aprendo en casa",
P5_2_E="Atender los problemas socioemocionales de sus estudiantes",
P5_2_F= "Coordinar y responder a la demanda de padres y madres de familia",
P5_2_G= "Proponer e implementar innovaciones o buenas prácticas pedagógicas"
)|>
tab_cells(P5_2_E, P5_2_F, P5_2_A, P5_2_B, P5_2_C, P5_2_D,P5_2_G
)|>
tab_cols(total(), Sexo, AREA_DESC, AREA_DESC%nest%Sexo)|>
tab_weight(FACTOR_EXPANSION)|>
tab_stat_cpct()|>
tab_last_sig_cpct()|>
tab_pivot()
#)
tab24
ENDO2022|>
filter(C5==1)|>
select(P2_3_1, P2_3_2, P2_3_3, P2_3_4, CODSEXO,AREA_DESC, FACTOR_EXP_DOC)|>
md.pattern()
tab25<-
ENDO2022|>
filter(C5==1)|>
select(P2_3_1: P2_3_4, CODSEXO,AREA_DESC, FACTOR_EXP_DOC)|>
mutate(across(c(P2_3_1:P2_3_4),~sjmisc::replace_na(.,value= 100,na.label =  "Sin información")))|>
apply_labels(P2_3_1 = "Planificar la enseñanza de forma individual o colegiada",
P2_3_2 = "Realizar la evaluación diagnóstica y formativa",
P2_3_3 = "Atender los problemas socioemocionales de sus estudiantes",
P2_3_4 = "Proponer e implementar innovaciones o buenas prácticas pedagógicas"
)|>
tab_cells(P2_3_3, P2_3_1, P2_3_2, P2_3_4
)|>
tab_cols(total(), CODSEXO, AREA_DESC, AREA_DESC%nest%CODSEXO)|>
tab_weight(FACTOR_EXP_DOC)|>
tab_stat_cpct()|>
tab_last_sig_cpct()|>
tab_pivot()
tab25
ENDO2023|>
filter(C5==1)|>
select(P1_2_1: P1_2_4, CODSEXO,AREA_DESC, FACTOR_EXP_DOC)|>
md.pattern()
tab26<-
ENDO2023|>
filter(C5==1)|>
select(P1_2_1: P1_2_4,CODSEXO,AREA_DESC, FACTOR_EXP_DOC)|>
apply_labels(P1_2_1= "Proponer e implementar innovaciones o buenas prácticas pedagógicas",
P1_2_2 = "Atender los problemas socioemocionales de sus estudiantes",
P1_2_3 = "Coordinar y responder la demanda de padres y madres de familia",
P1_2_4= "Fortalecer la competencia lectora de sus estudiantes")|>
tab_cells(P1_2_1, P1_2_2, P1_2_3, P1_2_4)|>
tab_cols(total(), CODSEXO, AREA_DESC, AREA_DESC%nest%CODSEXO)|>
tab_weight(FACTOR_EXP_DOC)|>
tab_stat_cpct(total_statistic = "u_cases")|>
tab_last_sig_cpct()|>
tab_pivot()
tab26
install.packages("shiny")
install.packages("shinythemes")
setwd("~/2024-2/ASIES/SpatialData")
library(shiny)
library(shinythemes)
ui <- fluidPage(
theme = shinytheme("flatly"),  # Tema para el dashboard
titlePanel("Dashboard: Moran Scatter Plot for COVID 2021"),
sidebarLayout(
sidebarPanel(
h3("Información"),
p("Este gráfico muestra el Moran Scatter Plot calculado en Python para los datos de COVID-19 en Perú (2021)."),
p("Puedes exportar más gráficos desde Python y mostrarlos aquí.")
),
mainPanel(
h3("Moran Scatter Plot"),
img(src = "moran_scatter_plot_2021.png", height = "600px", width = "800px")
)
)
)
install.packages("fastmap")
ui <- fluidPage(
theme = shinytheme("flatly"),  # Tema para el dashboard
titlePanel("Dashboard: Moran Scatter Plot for COVID 2021"),
sidebarLayout(
sidebarPanel(
h3("Información"),
p("Este gráfico muestra el Moran Scatter Plot calculado en Python para los datos de COVID-19 en Perú (2021)."),
p("Puedes exportar más gráficos desde Python y mostrarlos aquí.")
),
mainPanel(
h3("Moran Scatter Plot"),
img(src = "moran_scatter_plot_2021.png", height = "600px", width = "800px")
)
)
)
library(shiny)
library(shinythemes)
ui <- fluidPage(
theme = shinytheme("flatly"),  # Tema para el dashboard
titlePanel("Dashboard: Moran Scatter Plot for COVID 2021"),
sidebarLayout(
sidebarPanel(
h3("Información"),
p("Este gráfico muestra el Moran Scatter Plot calculado en Python para los datos de COVID-19 en Perú (2021)."),
p("Puedes exportar más gráficos desde Python y mostrarlos aquí.")
),
mainPanel(
h3("Moran Scatter Plot"),
img(src = "moran_scatter_plot_2021.png", height = "600px", width = "800px")
)
)
)
# Lógica del servidor
server <- function(input, output) {}
# Ejecutar la aplicación
shinyApp(ui = ui, server = server)
setwd("~/2024-2/ASIES/SpatialData")
library(shiny)
library(shinythemes)
ui <- fluidPage(
theme = shinytheme("flatly"),  # Tema para el dashboard
titlePanel("Dashboard: Moran Scatter Plot for COVID 2021"),
sidebarLayout(
sidebarPanel(
h3("Información"),
p("Este gráfico muestra el Moran Scatter Plot calculado en Python para los datos de COVID-19 en Perú (2021)."),
p("Puedes exportar más gráficos desde Python y mostrarlos aquí.")
),
mainPanel(
h3("Moran Scatter Plot"),
img(src = "moran_scatter_plot_2021.png", height = "600px", width = "800px")
)
)
)
# Lógica del servidor
server <- function(input, output) {}
# Ejecutar la aplicación
shinyApp(ui = ui, server = server)
setwd("~/2024-2/ASIES/Dashboards")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
setwd("~/2024-2/ASIES/Public-budget")
dep_map <- st_read("DEPARTAMENTOS.shp")
dep_map <- st_read("DEPARTAMENTOS_inei_geogpsperu_suyopomalia.shp")
View(dep_map)
View(dep_map)
library(sf)
library(ggplot2)
library(RColorBrewer)
setwd("~/2024-2/ASIES/Public-budget")
budget <- st_read("budgetprovinciasPeru.gpkg")
View(budget)
str(budget)
# Definir los intervalos de ejecución
breaks <- c(0, 25, 50, 75, 100)
labels <- c("0-25%", "26-50%", "51-75%", "76-100%")
# Asignar los colores a los intervalos
budget$intervalo_ejecucion <- cut(budget$EJECUCION_DIC_2024, breaks = breaks, labels = labels, include.lowest = TRUE)
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero diciembre 2024") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero diciembre 2024") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 30, r = 10, b = 10, l = 10))
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero diciembre 2024") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 30, r = 40, b = 10, l = 40))
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 16, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 10, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "white", size = 0.2) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "white", size = 0.02) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "grey", size = 0.002) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "white", size = 0.0002) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "black", size = 0.0002) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), , color = "black", size = 0.000000002) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion)) +#, , color = "black", size = 0.000000002) +
scale_fill_brewer(palette = "YlGnBu", name = "Porcentaje de Ejecución", breaks = labels) +
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia al 1ero dicembre 2024 Perú") +
theme_minimal() +
theme(legend.position = "bottom",
plot.margin = margin(t = 40, r = 10, b = 10, l = 10),  # Aumentamos el margen superior
plot.title = element_text(size = 13, hjust = 0.5),  # Título más grande y centrado
axis.text = element_blank(),  # Elimina los textos del eje
axis.title = element_blank())  # Elimina los títulos de los ejes
ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "white", size = 0.3) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "white", size = 0.3) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a
View(a)
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "black", size = 0.1) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "black", size = 0.01) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = NA) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = black) +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "black"") +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
a<-ggplot(data = budget) +
geom_sf(aes(fill = intervalo_ejecucion), color = "black") +  # Líneas blancas y finas
scale_fill_brewer(palette = "YlGnBu",
name = "Porcentaje de Ejecución",
labels = c("0-25%", "26-50%", "51-75%", "76-100%")) +  # Paleta de colores y leyenda mejorada
labs(title = "Porcentaje de Ejecución Presupuestal por Provincia",
caption = "Fuente: Datos presupuestales 2024") +  # Título y fuente
theme_minimal(base_size = 14) +  # Tema limpio con texto más grande
theme(
plot.background = element_rect(fill = "#f7f7f7", color = NA),  # Fondo suave
panel.grid = element_blank(),  # Sin cuadrícula
legend.position = "bottom",  # Leyenda en la parte inferior
legend.title = element_text(size = 12, face = "bold"),  # Título de la leyenda estilizado
legend.text = element_text(size = 10),  # Texto de la leyenda más grande
plot.title = element_text(size = 18, hjust = 0.5, face = "bold", color = "#333333"),  # Título centrado y destacado
plot.caption = element_text(size = 10, hjust = 1, face = "italic"),  # Fuente en cursiva a la derecha
plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Márgenes más amplios
)
a
setwd("~/2024-2/ASIES/Dashboards/TABS")
